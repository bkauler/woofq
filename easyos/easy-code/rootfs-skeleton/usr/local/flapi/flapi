#!/bin/bash
#want a gui like /usr/local/appi/appi
#also launched via /usr/bin/flapi
#20230409 mount unencrypted folder on /home/<app> ...no, symlink.
#20230412 confirm operation success.
#20230414 extract entries to a separate file.
#20230415 start dbus-daemon session and kill.
#20230502 support fscrypt v2
#20230509 need a hack for zoom.
#20230510 support custom entries. 20230511 check for duplicates.
#20230516 ping to check internet. reduce scale fact 1.2 to 1.1. fix version detect.
#20230524 fix find installed flatpaks.
#20230528 setgid. ref: https://bkhome.org/news/202305/setting-up-permissions-under-files-take-2.html
#20230617 note: set-client now has already created /files/apps/<appname>
#20230619 remove runtimes and extensions that are not used by any installed applications.
#20230701 fix when cannot register with flathub.org
#20231213 firefox: fix start 2nd instance. ref: https://discourse.mozilla.org/t/how-does-firefox-discover-a-running-instance-to-connect-to/109957
#20240120 fix start and stop client dbus-daemon
#20240903 path now /usr/local/flapi
#20240905 translate menu top category. aware of jwm-mode. new notes-security
#20240906 brave browser.
#20241104 run build-rox-sendto as a separate process, because slow.
#20250205 more height.

if [ "$(whoami)" != "root" ];then
 if [ -x /usr/bin/sudo-sh ];then
  exec sudo-sh ${PPID} ${0} ${@}
 else
  exec sudo -A ${0} ${@}
 fi
fi

export TEXTDOMAIN=flatpaks
export TEXTDOMAINDIR=/usr/share/locale
export OUTPUT_CHARSET=UTF-8

. /etc/uimanager #20240905 has UI_DESK_MANAGER=rox or jwm
. /etc/DISTRO_SPECS
CR='
'
mkdir -p /tmp/flatpak
mkdir -p /mnt/wkg/flatpak
. /root/.packages/build-choices #20230502 has EOS_FSCRYPT_VER

start_func() { #20230516 20240706 bump ping wait 5 to 8
 ping -4 -c 1 -w 8 google.com > /dev/null 2>&1
 if [ $? -ne 0 ];then
  M3a="$(gettext 'ERROR: An Internet connection is required.')"
  popup "terminate=ok background=#ff8080 level=top process=wait|<big>${M3a}</big>"
  exec flapi
 fi
 #20230701 improve test bad repo...
 FHflg='ok'
 if [ ! -d /mnt/wkg/flatpak/repo ];then FHflg='bad'; fi
 if [ -f /mnt/wkg/flatpak/repo/config ];then
  if ! grep -q '^gpg-verify=true' /mnt/wkg/flatpak/repo/config;then FHflg='bad'; fi
  if ! grep -q -F 'homepage=https://flathub.org/' /mnt/wkg/flatpak/repo/config;then FHflg='bad'; fi
 fi
 if [ "$FHflg" == "bad" ];then
  #if bad, wipe repo folder and start again...
  if [ -d /mnt/wkg/flatpak/repo ];then rm -rf /mnt/wkg/flatpak/repo; fi
  #now attempt register with flathub...
  FHflg='ok'
  flatpak remote-add --if-not-exists flathub https://flathub.org/repo/flathub.flatpakrepo
  if [ $? -ne 0 ];then FHflg='bad'; fi
  if [ ! -d /mnt/wkg/flatpak/repo ];then FHflg='bad'; fi
  if [ -f /mnt/wkg/flatpak/repo/config ];then
   if ! grep -q '^gpg-verify=true' /mnt/wkg/flatpak/repo/config;then FHflg='bad'; fi
   if ! grep -q -F 'homepage=https://flathub.org/' /mnt/wkg/flatpak/repo/config;then FHflg='bad'; fi
  fi
  if [ "$FHflg" == "bad" ];then
   rm -rf /mnt/wkg/flatpak/repo 2>/dev/null
   export FP_DLG0="<window title=\"$(gettext 'Flatpak Installer: Error')\" image-name=\"/usr/share/pixmaps/flatpak.png\">
   <vbox>
    <text use-markup=\"true\">
      <label>\"
<b><span color='red'>$(gettext 'ERROR: Failure registering with Flathub repository.')</span></b>

$(gettext 'Some users have found that synchronizing the time from the Internet fixes this problem. We do not know why, it just seems to be a peculiarity of the flatpak program.')

$(gettext 'Click the button to synchronize time from Internet. After that start the Flatpak Installer again, and hopefully it will work.')\"</label>
    </text>
    <hbox>
      <button><label>$(gettext 'Sync time from Internet')</label><action>exit:qsync</action></button>
      <button cancel></button>
    </hbox>
   </vbox></window>"
   VALS0="$(gtkdialog --center --program=FP_DLG0)"
   xVALS0="$(echo "$VALS0" | grep '^EXIT')"
   eval "$xVALS0"
   if [ "$EXIT" == "qsync" ];then
    qsync
   fi
   exit
  fi
 fi
}

if [ "$EOS_FSCRYPT_VER" == "1" ];then
 M2="$(gettext 'The Flatpak sandbox is good, but conflicts with ext4 folder encryption. Thus, the application-name in the /home folder is a symlink to an unencrypted folder in the working-partition.')"
else
 M2="$(gettext 'If you entered a password at first bootup of EasyOS, then all working folders are encrypted, and this includes files created by the Flatpak app while you are using it. If your USB-stick, or on whatever media EasyOS is installed, is stolen, your data is safe.')"
fi

Hfp1="$(gettext 'Flatpaks are applications that contain all dependencies built-in, so they will run on almost any Linux distribution, without having to install any other packages.')
$(gettext 'Consequently, they are large, typically 100MB to 900MB, so you do need reasonably fast Internet and adequate data allowance with your telco.')

$(gettext 'The Flatpaks are installed so that each runs as its own user, which maximizes isolation and hence security.')

$(gettext 'Upon installation, a menu-entry is created, and you are good-to-go.')

<b>$(gettext 'Customize')</b>
$(gettext 'Add your own entries to the Installer.')

<b>$(gettext 'Notes')</b>
$(gettext 'A tick in the second column means that the Flatpak is already installed. You may then have the opportunity of updating or deleting it.')
$(gettext 'After a Flatpak is installed, the file-manager will recognize the file types handled by that app. Right-click on an appropriate file and the Flatpak will be offered to open it.')
${M2}"
export DLG_HELP_FP="<window resizable=\"false\" title=\"$(gettext 'Help: Flatpak Installer')\" icon-name=\"gtk-index\" window_position=\"1\"><vbox><text use-markup=\"true\"><label>\"${Hfp1}\"</label><variable>DLG_HELP_FP</variable></text><hbox><button><label>$(gettext 'Close')</label><action type=\"closewindow\">DLG_HELP_FP</action></button></hbox></vbox></window>"

#find out what already installed...
for aFP in $(find /mnt/wkg/flatpak/exports/bin -mindepth 1 -maxdepth 1 -type l 2>/dev/null)
do
 [ "$aFP" == "" ] && continue
 #ex: org.kde.Krita
 case "${aFP}" in
  *-*) continue ;;
  *DIYLayoutCreator) aFP='DIYLC' ;;
  *visualstudio.code) aFP='VSCode' ;;
  *gdevelop.ide) aFP='GDevelop' ;;
  *obsproject.Studio) aFP='OBS' ;;
  *jitsi-meet) aFP='JitsiMeet' ;;
  *organicmaps.desktop) aFP='OrganicMaps' ;;
  *teams_for_linux) aFP='Teams' ;;
  *telegram.desktop) aFP='Telegram' ;;
  *mimbrero.WhatsAppDesktop) aFP='WhatsApp' ;;
  *skype.Client) aFP='Skype' ;;
  *bitwarden.desktop) aFP='Bitwarden' ;;
  *sqlitebrowser.sqlitebrowser) aFP='DBBrowser' ;;
  *sweethome3d.Sweethome3d) aFP='SweetHome' ;;
  *diy_fever.DIYLayoutCreator) aFP='DIYLC' ;;
  *spotify.Client) aFP='Spotify' ;;
  *torbrowser-launcher) aFP='Tor' ;;
  *UngoogledChromium) aFP='UnGoogled' ;;
  *brave.Browser) aFP='Brave' ;;
 esac
 
 #20230510 custom
 aCUST="$(grep -F -l "${aFP##*/}" /usr/local/flapi/custom/* | head -n 1)"
 if [ "$aCUST" ];then #ex: /usr/local/flapi/custom/goldendict
  . ${aCUST}
  aFP="${cAPPname}"
 fi
 
 aFP="${aFP##*.}"
 eval "FLG${aFP,,}='√'" #ex: sets FLGaudacity=√
 export FLG${aFP,,}
done

ARCH='amd64'

#20230511 remove custom entry if already builtin...
grep -v '^#' /usr/local/flapi/entries/${ARCH}/entries > /tmp/flatpak/arch-entries
for aCUST in $(find /usr/local/flapi/custom -mindepth 1 -maxdepth 1 -type f | tr '\n' ' ')
do
 aNAME="${aCUST##*/}"
 [ "${aNAME}" == "template" ] && continue
 aPTN="=\\\"${aNAME}\\\""
 grep -q -F "${aPTN}" /tmp/flatpak/arch-entries
 if [ $? -eq 0 ];then
  rm -f /usr/local/flapi/custom/${aNAME}
 fi
done

/usr/local/flapi/entries/${ARCH}/entries #this evaluates each entry.
ENTRIESaudio="$(cat /tmp/flatpak/ENTRIESaudio)"
ENTRIESdeveloper="$(cat /tmp/flatpak/ENTRIESdeveloper)"
ENTRIESgames="$(cat /tmp/flatpak/ENTRIESgames)"
ENTRIESgraphics="$(cat /tmp/flatpak/ENTRIESgraphics)"
ENTRIESnetwork="$(cat /tmp/flatpak/ENTRIESnetwork)"
ENTRIESoffice="$(cat /tmp/flatpak/ENTRIESoffice)"
ENTRIESproductivity="$(cat /tmp/flatpak/ENTRIESproductivity)"
ENTRIESsystem="$(cat /tmp/flatpak/ENTRIESsystem)"
ENTRIESvideo="$(cat /tmp/flatpak/ENTRIESvideo)"
ENTRIESother="$(cat /tmp/flatpak/ENTRIESother)"

###main gui###
tHEIGHT='382' #20250205
PACKAGE="Flatpak"
DESCRIPTION="$(gettext 'Description')"
SIZE="$(gettext 'Size')"
export FP_DLG1="<window title=\"$(gettext 'Flatpak Installer')\" image-name=\"/usr/share/pixmaps/flatpak.png\">
  <vbox>
    <text use-markup=\"true\"><label>\"$(gettext 'Flatpaks are applications with all dependencies builtin.')${CR}$(gettext 'They may be downloaded and installed in EasyOS.')${CR}$(gettext 'An existing installation may be updated or deleted.')\"</label></text>
    <notebook labels=\"$(gettext 'Audio')|$(gettext 'Developer')|$(gettext 'Games')|$(gettext 'Graphics')|$(gettext 'Network')|$(gettext 'Office')|$(gettext 'Productivity')|$(gettext 'System')|$(gettext 'Video')|$(gettext 'Other')\">
      <tree column-resizeable=\"0\">
        <label>${PACKAGE}||${DESCRIPTION}</label>
        <height>${tHEIGHT}</height>
        <variable>TREEaudio</variable>
        <action signal=\"enter-notify-event\" type=\"refresh\">TREEaudio</action>
        ${ENTRIESaudio}
      </tree>
      <tree column-resizeable=\"0\">
        <label>${PACKAGE}||${DESCRIPTION}</label>
        <height>${tHEIGHT}</height>
        <variable>TREEdeveloper</variable>
        <action signal=\"enter-notify-event\" type=\"refresh\">TREEdeveloper</action>
        ${ENTRIESdeveloper}
      </tree>
      <tree column-resizeable=\"0\">
        <label>${PACKAGE}||${DESCRIPTION}</label>
        <height>${tHEIGHT}</height>
        <variable>TREEgames</variable>
        <action signal=\"enter-notify-event\" type=\"refresh\">TREEgames</action>
        ${ENTRIESgames}
      </tree>
      <tree column-resizeable=\"0\">
        <label>${PACKAGE}||${DESCRIPTION}</label>
        <height>${tHEIGHT}</height>
        <variable>TREEgraphics</variable>
        <action signal=\"enter-notify-event\" type=\"refresh\">TREEgraphics</action>
        ${ENTRIESgraphics}
      </tree>
      <tree column-resizeable=\"0\">
        <label>${PACKAGE}||${DESCRIPTION}</label>
        <height>${tHEIGHT}</height>
        <variable>TREEnetwork</variable>
        <action signal=\"enter-notify-event\" type=\"refresh\">TREEnetwork</action>
        ${ENTRIESnetwork}
      </tree>
      <tree column-resizeable=\"0\">
        <label>${PACKAGE}||${DESCRIPTION}</label>
        <height>${tHEIGHT}</height>
        <variable>TREEoffice</variable>
        <action signal=\"enter-notify-event\" type=\"refresh\">TREEoffice</action>
        ${ENTRIESoffice}
      </tree>
      <tree column-resizeable=\"0\">
        <label>${PACKAGE}||${DESCRIPTION}</label>
        <height>${tHEIGHT}</height>
        <variable>TREEproductivity</variable>
        <action signal=\"enter-notify-event\" type=\"refresh\">TREEproductivity</action>
        ${ENTRIESproductivity}
      </tree>
      <tree column-resizeable=\"0\">
        <label>${PACKAGE}||${DESCRIPTION}</label>
        <height>${tHEIGHT}</height>
        <variable>TREEsystem</variable>
        <action signal=\"enter-notify-event\" type=\"refresh\">TREEvideo</action>
        ${ENTRIESsystem}
      </tree>
      <tree column-resizeable=\"0\">
        <label>${PACKAGE}||${DESCRIPTION}</label>
        <height>${tHEIGHT}</height>
        <variable>TREEvideo</variable>
        <action signal=\"enter-notify-event\" type=\"refresh\">TREEvideo</action>
        ${ENTRIESvideo}
      </tree>
      <tree column-resizeable=\"0\">
        <label>${PACKAGE}||${DESCRIPTION}</label>
        <height>${tHEIGHT}</height>
        <variable>TREEother</variable>
        <action signal=\"enter-notify-event\" type=\"refresh\">TREEother</action>
        ${ENTRIESother}
      </tree>

    </notebook>
    <hbox>
      <text><label>$(gettext 'Highlight a Flatpak then click a button:')</label></text>
      <text><label>\"  \"</label></text>
    </hbox>
    <hbox>
      <button space-expand=\"false\" space-fill=\"false\"><input file>/usr/local/lib/X11/mini-icons/mini-question.xpm</input><action type=\"launch\">DLG_HELP_FP</action></button>
      <button space-expand=\"false\" space-fill=\"false\"><label>$(gettext 'Exit')</label><action>exit:QUIT</action></button>
      <button space-expand=\"false\" space-fill=\"false\"><label>$(gettext 'Customize')</label><action>exit:BUTcust</action></button>
      <text space-expand=\"true\" space-fill=\"true\"><label>\"  \"</label></text>
      <button><label>$(gettext 'Install/Update/Delete')</label><action>exit:BUTinstall</action></button>
      <button><label>$(gettext 'Online Information')</label><action>/usr/local/flapi/online-info \"\$TREEaudio\" \"\$TREEdeveloper\" \"\$TREEgames\" \"\$TREEgraphics\" \"\$TREEnetwork\" \"\$TREEoffice\" \"\$TREEproductivity\" \"\$TREEsystem\" \"\$TREEvideo\" \"\$TREEother\" </action></button>
    </hbox>
  </vbox>
</window>
"

RETVALS="$(gtkdialog --center --program=FP_DLG1)"
xRETVALS="$(echo "$RETVALS" | grep -E '^TREE|^EXIT')"
eval "$xRETVALS"

if [ "$EXIT" == "BUTcust" ];then #20230510
 start_func #20230516
 exec /usr/local/flapi/customize
fi

if [ "$EXIT" != "BUTinstall" ];then
 exit
fi

#there could be multiple choices, but let's just do one...
for aAPP in "$TREEaudio" "$TREEdeveloper" "$TREEgames" "$TREEgraphics" "$TREEnetwork" "$TREEoffice" "$TREEproductivity" "$TREEsystem" "$TREEvideo" "$TREEother"
do
 if [ "$aAPP" != "" ];then
  break
 fi
done
if [ "$aAPP" == "" ];then
 M1="$(gettext 'No Flatpak selected. Aborting.')"
 popup "terminate=ok background=#ff8080 level=top process=wait|<big>${M1}</big>"
 exit 1
fi

TRIPLET=''
case "${aAPP}" in
 Audacity) TRIPLET='org.audacityteam.Audacity'; MENUcat='X-Multimedia-sound'; MENUtop='Multimedia'; MENUname='Audacity audio editor'; ;;
 Krita)    TRIPLET='org.kde.krita'; MENUcat='X-Graphic'; MENUtop='Graphic'; MENUname='Krita vector and raster editor'; ;;
 OpenShot) TRIPLET='org.openshot.OpenShot'; MENUcat='X-Multimedia-video'; MENUtop='Multimedia'; MENUname='OpenShot video editor'; ;;
 Okular) TRIPLET='org.kde.okular'; MENUcat='X-Document-viewer'; MENUtop='Document'; MENUname='Okular document viewer'; ;;
 Identity) TRIPLET='org.gnome.gitlab.YaLTeR.Identity'; MENUcat='X-Utility'; MENUtop='Utility'; MENUname='Identity compare images and videos'; ;;
 Kdenlive) TRIPLET='org.kde.kdenlive'; MENUcat='X-Multimedia-video'; MENUtop='Multimedia'; MENUname='Kdenlive video editor'; ;;
 Fragments) TRIPLET='de.haeckerfelix.Fragments'; MENUcat='X-Internet-transfer'; MENUtop='Internet'; MENUname='Fragments BitTorrent client'; ;;
 Cambalache) TRIPLET='ar.xjuan.Cambalache'; MENUcat='X-Utility-development'; MENUtop='Utility'; MENUname='Cambalache GTK interface designer'; ;;
 DIYLC) TRIPLET='com.diy_fever.DIYLayoutCreator'; MENUcat='X-Utility-development'; MENUtop='Utility'; MENUname='DIYLC circuit board layout'; ;;
 Minder) TRIPLET='com.github.phase1geo.minder'; MENUcat='X-Personal'; MENUtop='Personal'; MENUname='Minder mind-mapper'; ;;
 AndroidStudio) TRIPLET='com.google.AndroidStudio'; MENUcat='X-Utility-development'; MENUtop='Utility'; MENUname='Android Studio app development'; ;;
 SmartGit) TRIPLET='com.syntevo.SmartGit'; MENUcat='X-Utility-development'; MENUtop='Utility'; MENUname='SmartGit Git client'; ;;
 VSCode) TRIPLET='com.visualstudio.code'; MENUcat='X-Document-edit'; MENUtop='Document'; MENUname='VSCode Visual Studio Code editor'; ;;
 Scratch) TRIPLET='edu.mit.Scratch'; MENUcat='X-Utility-development'; MENUtop='Utility'; MENUname='Scratch GUI app creator'; ;;
 GDevelop) TRIPLET='io.gdevelop.ide'; MENUcat='X-Utility-development'; MENUtop='Utility'; MENUname='GDevelop no-code game creation'; ;;
 PurrData) TRIPLET='net.purrdata.PurrData'; MENUcat='X-Utility-development'; MENUtop='Utility'; MENUname='PurrData visual programming'; ;;
 Cozy) TRIPLET='com.github.geigi.cozy'; MENUcat='X-Personal'; MENUtop='Personal'; MENUname='Cozy audio book reader'; ;;
 Tuner) TRIPLET='com.github.louis77.tuner'; MENUcat='X-Internet'; MENUtop='Internet'; MENUname='Tuner Internet radio stations'; ;;
 OBS) TRIPLET='com.obsproject.Studio'; MENUcat='X-Multimedia'; MENUtop='Multimedia'; MENUname='OBS Studio video capture and stream'; ;;
 JitsiMeet) TRIPLET='org.jitsi.jitsi-meet'; MENUcat='X-Internet-chat'; MENUtop='Internet'; MENUname='JitsiMeet video conferencing'; ;;
 OrganicMaps) TRIPLET='app.organicmaps.desktop'; MENUcat='X-Personal'; MENUtop='Personal'; MENUname='OrganicMaps offline maps'; ;;
 Frogatto) TRIPLET='com.frogatto.Frogatto'; MENUcat='X-Fun'; MENUtop='Fun'; MENUname='Frogatto 2D adventure game'; ;;
 DOSBox) TRIPLET='com.dosbox.DOSBox'; MENUcat='X-System'; MENUtop='System'; MENUname='DOSBox Microsoft DOS emulator'; ;;
 AuthPass) TRIPLET='flathub app.authpass.AuthPass'; MENUcat='X-Personal'; MENUtop='Personal'; MENUname='AuthPass password manager'; ;;
 Calibre) TRIPLET='com.calibre_ebook.calibre'; MENUcat='X-Document-viewer'; MENUtop='Document'; MENUname='Calibre e-book reader'; ;;
 Teams) TRIPLET='com.github.IsmaelMartinez.teams_for_linux'; MENUcat='X-Internet-chat'; MENUtop='Internet'; MENUname='Teams Microsoft Teams client'; ;;
 Trilium) TRIPLET='com.github.zadam.trilium'; MENUcat='X-Personal'; MENUtop='Personal'; MENUname='Trilium hierarchical notes'; ;;
 Betterbird) TRIPLET='eu.betterbird.Betterbird'; MENUcat='X-Internet'; MENUtop='Internet'; MENUname='Betterbird email client'; ;;
 QGIS) TRIPLET='org.qgis.qgis'; MENUcat='X-Personal'; MENUtop='Personal'; MENUname='QGIS Geographic Information System'; ;;
 Gramps) TRIPLET='org.gramps_project.Gramps'; MENUcat='X-Personal'; MENUtop='Personal'; MENUname='Gramps genealogy program'; ;;
 PPSSPP) TRIPLET='org.ppsspp.PPSSPP'; MENUcat='X-Fun'; MENUtop='Fun'; MENUname='PPSSPP PlayStation emulator'; ;;
 MusicBlocks) TRIPLET='org.sugarlabs.MusicBlocks'; MENUcat='Music'; MENUtop='Multimedia'; MENUname='MusicBlocks graphical music discovery'; ;;
 FreeCAD) TRIPLET='org.freecadweb.FreeCAD'; MENUcat='X-Graphic-draw'; MENUtop='Graphic'; MENUname='FreeCAD 3D parametric modeler'; ;;
 Chrome) TRIPLET='com.google.Chrome'; MENUcat='X-Internet-browser'; MENUtop='Internet'; MENUname='Chrome web browser'; ;;
 Discord) TRIPLET='com.discordapp.Discord'; MENUcat='X-Internet-chat'; MENUtop='Internet'; MENUname='Discord message and video sharing'; ;;
 Telegram) TRIPLET='org.telegram.desktop'; MENUcat='X-Internet-chat'; MENUtop='Internet'; MENUname='Telegram secure messaging and video sharing'; ;;
 Zoom) TRIPLET='us.zoom.Zoom'; MENUcat='X-Internet-chat'; MENUtop='Internet'; MENUname='Zoom video conferencing'; ;;
 WhatsApp) TRIPLET='io.github.mimbrero.WhatsAppDesktop'; MENUcat='X-Internet-chat'; MENUtop='Internet'; MENUname='WhatsApp messaging and calls'; ;;
 Signal) TRIPLET='org.signal.Signal'; MENUcat='X-Internet-chat'; MENUtop='Internet'; MENUname='Signal private messaging'; ;;
 Thunderbird) TRIPLET='org.mozilla.Thunderbird'; MENUcat='X-Internet-mailnews'; MENUtop='Internet'; MENUname='Thunderbird mail and news client'; ;;
 Skype) TRIPLET='com.skype.Client'; MENUcat='X-Internet-chat'; MENUtop='Internet'; MENUname='Skype audio and video calls'; ;;
 Bottles) TRIPLET='com.usebottles.bottles'; MENUcat='X-Setup-puppy'; MENUtop='Setup'; MENUname='Bottles run Windows apps'; ;;
 Bitwarden) TRIPLET='com.bitwarden.desktop'; MENUcat='X-Personal-security'; MENUtop='Personal'; MENUname='Bitwarden password manager'; ;;
 KeePassXC) TRIPLET='org.keepassxc.KeePassXC'; MENUcat='X-Personal-security'; MENUtop='Personal'; MENUname='KeePassXC password manager'; ;;
 DBBrowser) TRIPLET='org.sqlitebrowser.sqlitebrowser'; MENUcat='X-Business'; MENUtop='Business'; MENUname='DBBrowser manage SQLITE db'; ;;
 CherryTree) TRIPLET='net.giuspen.cherrytree'; MENUcat='X-Personal-organizer'; MENUtop='Personal'; MENUname='CherryTree hierarchical notes'; ;;
 Blender) TRIPLET='org.blender.Blender'; MENUcat='X-Graphic'; MENUtop='Graphic'; MENUname='Blender 3D image creator'; ;;
 SweetHome) TRIPLET='com.sweethome3d.Sweethome3d'; MENUcat='X-Graphic'; MENUtop='Graphic'; MENUname='SweetHome 3D home layout'; ;;
 LibreCAD) TRIPLET='org.librecad.librecad'; MENUcat='X-Graphic-draw'; MENUtop='Graphic'; MENUname='LibreCAD 2D Computer Aided Drafting'; ;;
 LeoCAD) TRIPLET='org.leocad.LeoCAD'; MENUcat='X-Fun'; MENUtop='Fun'; MENUname='LeoCAD build with Lego bricks'; ;;
 gImageReader) TRIPLET='io.github.manisandro.gImageReader'; MENUcat='X-Graphic-scanner'; MENUtop='Graphic'; MENUname='gImageReader GUI for tesseract OCR'; ;;
 DIYLC) TRIPLET='com.diy_fever.DIYLayoutCreator'; MENUcat='X-Graphic'; MENUtop='Graphic'; MENUname='DIYLC circuit board layout'; ;;
 OpenToonz) TRIPLET='io.github.OpenToonz'; MENUcat='X-Graphic'; MENUtop='Graphic'; MENUname='OpenToonz 2D animation'; ;;
 Pencil2D) TRIPLET='org.pencil2d.Pencil2D'; MENUcat='X-Graphic'; MENUtop='Graphic'; MENUname='Vector and raster 2D animation'; ;;
 QElectroTech) TRIPLET='org.qelectrotech.QElectroTech'; MENUcat='X-Graphic'; MENUtop='Graphic'; MENUname='QElectroTech electrical circuit diagrams'; ;;
 Kodi) TRIPLET='tv.kodi.Kodi'; MENUcat='X-Multimedia-mediaplayer'; MENUtop='Multimedia'; MENUname='Kodi multimedia player'; ;;
 ShotCut) TRIPLET='org.shotcut.Shotcut'; MENUcat='X-Multimedia-video'; MENUtop='Multimedia'; MENUname='ShotCut video editor'; ;;
 LibrePCB) TRIPLET='org.librepcb.LibrePCB'; MENUcat='X-Graphic'; MENUtop='Graphic'; MENUname='LibrePCB printed circuit board design'; ;;
 Spotify) TRIPLET='com.spotify.Client'; MENUcat='X-Multimedia-sound'; MENUtop='Multimedia'; MENUname='Spotify music streaming'; ;;
 GoldenDict) TRIPLET='org.goldendict.GoldenDict'; MENUcat='X-Personal'; MENUtop='Personal'; MENUname='GoldenDict dictionary lookup'; ;;
 SpaceCadetPinball) TRIPLET='com.github.k4zmu2a.spacecadetpinball'; MENUcat='X-Fun'; MENUtop='Fun'; MENUname='SpaceCadetPinball 3D pinball game'; ;;
 Stremio) TRIPLET='com.stremio.Stremio'; MENUcat='X-Multimedia-mediaplayer'; MENUtop='Multimedia'; MENUname='Stremio streaming media player'; ;;
 GnuCash) TRIPLET='org.gnucash.GnuCash'; MENUcat='X-Business-finance'; MENUtop='Business'; MENUname='GnuCash accounting software'; ;;
 Tor) TRIPLET='org.torproject.torbrowser-launcher'; MENUcat='X-Internet-browser'; MENUtop='Internet'; MENUname='Tor secure web browser'; ;;
 UnGoogled) TRIPLET='com.github.Eloston.UngoogledChromium'; MENUcat='X-Internet-browser'; MENUtop='Internet'; MENUname='Un-Googled Chromium web browser' ;;
 KTorrent) TRIPLET='org.kde.ktorrent'; MENUcat='P2P'; MENUtop='Internet'; MENUname='KTorrent KDE BitTorrent client'; ;;
 Maps) TRIPLET='org.gnome.Maps'; MENUcat='X-Personal'; MENUtop='Personal'; MENUname='Maps OpenStreetMaps world map'; ;;
 Brave) TRIPLET='com.brave.Browser'; MENUcat='X-Internet-browser'; MENUtop='Internet'; MENUname='Brave web browser'; ;;
 ZZZ) TRIPLET=''; MENUcat=''; MENUtop=''; MENUname=''; ;;
esac

#20230510 custom
if [ -f /usr/local/flapi/custom/${aAPP,,} ];then
 . /usr/local/flapi/custom/${aAPP,,}
 TRIPLET="${cTRIPLET}"
 case "$cCATEGORY" in
  audio)        MENUcat='X-Multimedia-sound'; MENUtop='Multimedia'; ;;
  developer)    MENUcat='X-Utility-development'; MENUtop='Utility'; ;;
  games)        MENUcat='X-Fun'; MENUtop='Fun'; ;;
  graphics)     MENUcat='X-Graphic'; MENUtop='Graphic'; ;;
  network)      MENUcat='X-Internet'; MENUtop='Internet'; ;;
  office)       MENUcat='X-Business'; MENUtop='Business'; ;;
  productivity) MENUcat='X-Personal'; MENUtop='Personal'; ;;
  system)       MENUcat='X-System'; MENUtop='System'; ;;
  video)        MENUcat='X-Multimedia-video'; MENUtop='Multimedia'; ;;
  *)            MENUcat='X-Personal'; MENUtop='Personal'; ;; #other
 esac
 MENUname="${cAPPname} ${cAPPdesc,}"
fi

#20240905 translate menu top category...
MENUtop0="$MENUtop"
case "${MENUtop}" in
 Desktop)    MENUtop="$(gettext 'Desktop')" ;;
 System)     MENUtop="$(gettext 'System')" ;;
 Setup)      MENUtop="$(gettext 'Setup')" ;;
 Filesystem) MENUtop="$(gettext 'Filesystem')" ;;
 Graphic)    MENUtop="$(gettext 'Graphic')" ;;
 Document)   MENUtop="$(gettext 'Document')" ;;
 Business)   MENUtop="$(gettext 'Business')" ;;
 Personal)   MENUtop="$(gettext 'Personal')" ;;
 Network)    MENUtop="$(gettext 'Network')" ;;
 Internet)   MENUtop="$(gettext 'Internet')" ;;
 Multimedia) MENUtop="$(gettext 'Multimedia')" ;;
 Fun)        MENUtop="$(gettext 'Fun')" ;;
 *)          MENUtop="$(gettext 'Utility')" ;;
esac

if [ "$TRIPLET" == "" ];then #precaution.
 exit
fi

#check internet and register with flathub...
start_func #20230516

#test if already installed...
UPDATEflg='no'; FPver=''
if [ -e /mnt/wkg/flatpak/exports/bin/${TRIPLET} ];then
 if [ -f /usr/bin/${aAPP,,} ];then
  #already installed. 20230516 fix FPver...
  #FPver="$(flatpak list --app --columns=name,version | tr '\t' ' ' | tr -s ' ' | grep "^${aAPP} " | cut -f 2 -d ' ')"
  #20230516 seems weird, but this is how specify tab delimiter for cut... 20230524 grep need -i...
  FPver="$(flatpak list --app --columns=name,version | grep -i "^${aAPP}" | tr -s '\t' | cut -f 2 -d$'\t')"
  UPDATExml="<text><label>$(gettext 'To probe online if there is a later version and update to it, click the UPDATE button:')</label></text>
   <vbox>
    <button><label>$(gettext 'UPDATE')</label><action>EXIT:update</action></button>
   </vbox>"
  export FP_DLG2="<window title=\"$(gettext 'Flatpak Installer')\" image-name=\"/usr/share/pixmaps/flatpak.png\">
  <vbox>
    <text use-markup=\"true\">
      <label>\"$(gettext 'Please make a choice for this installed Flatpak:')
  <b>${aAPP} ${FPver}</b>
    \"</label></text>
    <frame>
      <hbox>
        ${UPDATExml}
      </hbox>
    </frame>
    <frame>
      <hbox>
        <text><label>$(gettext 'To delete the Flatpak installation completely, click the DELETE button:')</label></text>
        <vbox>
          <button><label>$(gettext 'DELETE')</label><action>EXIT:delete</action></button>
        </vbox>
      </hbox>
    </frame>
    <text><label>\"  \"</label></text>
    <hbox>
      <text><label>$(gettext 'Otherwise, click the EXIT button to exit from Flatpak Installer:')</label></text>
      <vbox>
        <button><label>$(gettext 'EXIT')</label><action>EXIT:quit</action></button>
      </vbox>
    </hbox>
  </vbox></window>"
  RET2="$(gtkdialog --center --program=FP_DLG2)"
  eval "${RET2}"
  
  case "$EXIT" in
   delete)
    #20230412 kill, ps commands don't work...
    #flatpak kill ${TRIPLET}
    pidof ${aAPP,,}.bin >/dev/null
    if [ $? -eq 0 ];then
     M12="$(gettext 'The application is running. Please close it, then click OK button to uninstall:')"
     popup "process=wait terminate=ok background=#ff8080 level=top|<big><big>${M12}</big></big>"
    fi
    urxvt -bg '#FFE0A0' -geometry '100x25' -e flatpak uninstall ${TRIPLET}
    #20230412 confirm uninstall...
    flatpak list --app --columns=application > /tmp/flatpak/list-installed
    grep -q -x -F ${TRIPLET} /tmp/flatpak/list-installed
    if [ $? -eq 0 ];then #20230412
     exec flapi
    fi
    
    #20230619 remove runtimes and extensions that are not used by any installed applications...
    urxvt -bg '#FFE0A0' -geometry '100x25' -e flatpak uninstall --unused
    
    rm -rf /home/${aAPP,,}
    rm -f /usr/share/applications/${aAPP,,}.desktop
    rm -f /usr/bin/${aAPP,,}
    rm -f /usr/bin/${aAPP,,}.bin
    grep -q "/home/${aAPP,,}/${aAPP,,}" /root/Choices/ROX-Filer/PuppyPin
    if [ $? -eq 0 ];then
     #remove desktop icon... 20230427 fix
     echo "<?xml version=\"1.0\"?>
<env:Envelope xmlns:env=\"http://www.w3.org/2001/12/soap-envelope\">
 <env:Body xmlns=\"http://rox.sourceforge.net/SOAP/ROX-Filer\">
  <PinboardRemove>
   <Path>/home/${aAPP,,}/${aAPP,,}</Path>
  </PinboardRemove>
 </env:Body>
</env:Envelope>" | rox -R
    fi
    fixmenus
    jwm -reload
    Md="$(gettext 'Flatpak deleted') "
    popup "process=wait terminate=ok background=#80ff80 level=top|<big>${Md}</big>"
    exit
   ;;
   update)
    UPDATEflg='yes'
   ;;
   *)
    exit
   ;;
  esac
 fi
else
 if [ -f /usr/bin/${aAPP,,} ];then
  M7="$(gettext 'This app is installed, but it is not a Flatpak. Aborting') "
  popup "process=wait terminate=ok background=#ff8080 level=top|<big>${M7}</big>"
  exec flapi
 fi
fi

###new install or update###
if [ "$UPDATEflg" == "yes" ];then
 Mup="$(gettext 'Please confirm that you want to probe online for a later version of this Flatpak:')"
else
 Mup="$(gettext 'Please confirm that you want to download and install this Flatpak:')"
fi
export FP_DLG3="<window title=\"$(gettext 'Flatpak Installer')\" image-name=\"/usr/share/pixmaps/flatpak.png\">
  <vbox>
   <text use-markup=\"true\"><label>\"${Mup}
  <b>${aAPP}</b>\"</label></text>
  <hbox>
   <button ok></button>
   <button cancel></button>
  </hbox>
  </vbox></window>"
RET3="$(gtkdialog --center --program=FP_DLG3)"
eval "$RET3"
if [ "$EXIT" != "OK" ];then
 exit 0
fi

#need internet connection...
#20230412 one person reported this file is empty even though have internet...
#if [ ! -s /tmp/pup_event_backend/network_ ];then
ping -4 -c 1 -W 5 -w 6 google.com >/dev/null
if [ $? -ne 0 ];then
 M4="$(gettext 'An Internet connection is required to download a Flatpak.')"
 popup "terminate=ok background=#ff8080 level=top process=wait|<big><big>${M4}</big></big>"
 exec flapi
fi

if [ "$UPDATEflg" == "yes" ];then
 NEWver="$(flatpak search --columns=version ${TRIPLET})"
 export FP_DLG4="<window title=\"$(gettext 'Flatpak Installer:') ${aAPP}\" image-name=\"/usr/share/pixmaps/flatpak.png\">
  <vbox>
    <text use-markup=\"true\">
      <label>\"$(gettext 'This is the currently installed version of the Flatpak:')
  <b>${FPver}</b>
$(gettext 'This is the latest version found online:')
  <b>${NEWver}</b>

$(gettext 'If the latest version is later than the current version, and you want to update, click the UPDATE button. Otherwise, click CANCEL to quit:')\"</label>
    </text>
    <hbox>
     <button>
       <label>$(gettext 'UPDATE')</label>
       <action>EXIT:download</action>
     </button>
     <button>
      <label>$(gettext 'CANCEL')</label>
      <action>EXIT:cancel</action>
     </button>
    </hbox>
  </vbox></window>"
 RET4="$(gtkdialog --center --program=FP_DLG4)"
 eval "$RET4" 
 
 if [ "$EXIT" != "download" ];then
  exit 0
 fi

 urxvt -bg '#FFE0A0' -geometry '100x25' -e flatpak update app/${TRIPLET}
 exit 0
fi

###install###
urxvt -bg '#FFE0A0' -geometry '100x25' -e flatpak install flathub app/${TRIPLET}
if [ ! -e /mnt/wkg/flatpak/exports/bin/${TRIPLET} ];then
 M5="$(gettext 'The Flatpak was not installed.')"
 popup "terminate=ok background=#ff8080 level=top process=wait|<big>${M5}</big>"
 exit 0
fi

#extract MimeType from .desktop...
echo -n '' > /tmp/flatpak/mimetype
DT1="$(find /mnt/wkg/flatpak/exports/share/applications -maxdepth 1 -name "${TRIPLET}.desktop" 2>/dev/null)"
if [ "$DT1" ];then
 grep '^MimeType=' ${DT1} > /tmp/flatpak/mimetype
fi

#script to run app... 20230415 
#20230417 need "--socket=system-bus" for dbus connection.
#this causes an error msg:  --file-forwarding
#20230409 i think better to have a path, instead of "host"...
#echo "#!/bin/sh
#flatpak run --filesystem=host ${TRIPLET}" > /usr/bin/${aAPP,,}
#flatpak run --filesystem=/mnt/wkg/data/flatpak/${aAPP,,} ${TRIPLET}
#but want to be able to open with any file via right-click menu in rox...
#20230505 make qt fonts bigger "--env=QT_SCALE_FACTOR=1.2"
# same for gtk " --env=GDK_DPI_SCALE=1.2"  20230516 reduce both to 1.1
#20231213 prevent 2nd instance dbus-daemon... 20240120 fix...
#20240907 append passed params $@
echo "#!/bin/sh
APPlow=\"${aAPP,,}\"
busybox ps | grep -q ' \${APPlow:0:8}.*dbus\-daemon'
DBUSflg=\$?
if [ \$DBUSflg -ne 0 ];then
 export \$(dbus-launch) #if app needs to access dbus.
 echo \"DBUS_SESSION_BUS_ADDRESS='\${DBUS_SESSION_BUS_ADDRESS}'
DBUS_SESSION_BUS_PID='\${DBUS_SESSION_BUS_PID}'\" > \${HOME}/.DBUS-DAEMON-VARS
else 
 if [ -s \${HOME}/.DBUS-DAEMON-VARS ];then
  eval \$(cat \${HOME}/.DBUS-DAEMON-VARS)
  export DBUS_SESSION_BUS_ADDRESS DBUS_SESSION_BUS_PID
 fi
fi
export XDG_DATA_DIRS=/mnt/wkg/flatpak/exports/share:/home/${aAPP,,}/.local/share/flatpak/exports/share:${XDG_DATA_DIRS} #need to fool flatpak.
flatpak run --env=GDK_DPI_SCALE=1.1 --env=QT_SCALE_FACTOR=1.1 --filesystem=host --socket=system-bus --socket=cups --socket=ssh-auth --socket=session-bus ${TRIPLET} \$@
pidof -o \${$} \${APPlow}.bin >/dev/null
if [ \$? -ne 0 ];then
 kill \$DBUS_SESSION_BUS_PID
 rm -f \${HOME}/.DBUS-DAEMON-VARS 2>/dev/null
fi
" > /usr/bin/${aAPP,,}
chmod 755 /usr/bin/${aAPP,,}

if [ "${LANG:0:2}" == "en" ];then
 NLSname=''
else
 NLStxt="$(gettext "${MENUname}")"
 NLSname="Name[${LANG:0:2}]=${NLStxt}
"
fi

echo "[Desktop Entry]
Version=1.0
Type=Application
${NLSname}Name=${MENUname}
GenericName=${aAPP}
Icon=${aAPP,,}.png
Categories=${MENUcat}
Exec=${aAPP,,}" > /usr/share/applications/${aAPP,,}.desktop
if [ -s /tmp/flatpak/mimetype ];then
 cat /tmp/flatpak/mimetype >> /usr/share/applications/${aAPP,,}.desktop
fi

if [ "$EOS_FSCRYPT_VER" == "1" ];then #20230502
 #20230409 mount unencrypted folder on /home/<app>... no, symlink...
 mkdir -p /mnt/wkg/data/flatpak/${aAPP,,}/data
 ln -s /mnt/wkg/data/flatpak/${aAPP,,} /home/${aAPP,,}
fi

#create /usr/bin/${aAPP,,} script to run as user ${aAPP,,} ...
setup-client "${aAPP,,}=true"

#20230509 need a hack for zoom...
if [ -d /usr/local/flapi/skeletons/${aAPP,,}/home/${aAPP,,} ];then
 chown -R ${aAPP,,}:${aAPP,,} /usr/local/flapi/skeletons/${aAPP,,}/home/${aAPP,,}
 cp -a -f /usr/local/flapi/skeletons/${aAPP,,}/home/${aAPP,,}/* /home/${aAPP,,}/ 2>/dev/null
 cp -a -f /usr/local/flapi/skeletons/${aAPP,,}/home/${aAPP,,}/.[a-zA-Z0-9]* /home/${aAPP,,}/ 2>/dev/null
fi

#20240905 create icon in jwm tray (if icon-free-desktop mode)...
#note: similar code in /usr/local/orange/orange.install and /usr/local/appi/appi
EN="${aAPP,,}"; RN="${aAPP}"
if [ -f /root/.jwm/tray-icons ];then
 grep -q -F "exec:${EN}<" /root/.jwm/tray-icons
 if [ $? -ne 0 ];then
  echo "<TrayButton popup=\"${RN}\" icon=\"${EN}.png\">exec:${EN}</TrayButton>" >> /root/.jwm/tray-icons
  if [ "${UI_DESK_MANAGER}" == "jwm" ];then
   #insert file between two patterns in /root/.jwmrc-tray...
   sed -i -e '/STARTICONS/,/ENDICONS/{/STARTICONS/!{/ENDICONS/!d}}' -e '/STARTICONS/r /root/.jwm/tray-icons' /root/.jwmrc-tray
  fi
 fi
fi

#update jwm menu...
fixmenus
if [ "${UI_DESK_MANAGER}" == "jwm" ];then #20240509
 #and tray...
 jwm -restart
else
 jwm -reload
fi

#update the right-click menu... 20241104 sep process
build-rox-sendto /usr/share/applications/${aAPP,,}.desktop &

if [ "$EOS_FSCRYPT_VER" == "1" ];then #20230502
 #20230409 flatpak sandbox doesn't work properly with ext4 fscrypt.
 # that is why created a symlink to unencrypted folder.
 # using /home/<app>/data for open/save. chown already done.
 #create a path for optional open/save files for this app
 #mkdir -p /files/apps/${aAPP,,}
 #chown -R ${aAPP,,}:${aAPP,,} /files/apps/${aAPP,,}
 #for extra security...
 #chmod 700 /files/apps/${aAPP,,}
 chmod 700 /home/${aAPP,,}/data
 M1="$(gettext 'This means that the app will only be able to save files in the home directory.')
$(gettext 'For your convenience, this folder has been created:')
  /home/${aAPP,,}/data"
else
 #20230617 note: set-client now has already created this...
 #create a path for optional open/save files for this app
 mkdir -p /files/apps/${aAPP,,}
 chown -h -R ${aAPP,,}:${aAPP,,} /files/apps/${aAPP,,} #20230318  20230528 add -h
 #20230319 for extra security...  20230528 setgid
 chmod 2700 /files/apps/${aAPP,,}
 M1="$(gettext 'This means that the app will only be able to save files in the home directory or anywhere in the /files folder.')
$(gettext 'For your convenience, this folder has been created:')
  /files/apps/${aAPP,,}" 
fi

export FP_DLG5="<window title=\"$(gettext 'Flatpak Installer: success')\" image-name=\"/usr/share/pixmaps/flatpak.png\">
  <vbox>
    <text><label>\"$(gettext 'Success, this Flatpak has been installed:')
  ${aAPP}
$(gettext 'This script has been created to run it:')
  /usr/bin/${aAPP,,}
$(gettext 'And a menu entry has been created in this category:')
  ${MENUtop}
$(gettext 'The Flatpak app will run as this user:')
  ${aAPP,,}
$(gettext 'With user home directory:')
  /home/${aAPP,,}

${M1}
$(gettext 'You may, if you wish, configure the app to open/save in this folder.')

$(gettext 'Click the OK button for some final useful information...')\"</label></text>
    <hbox>
     <button ok></button>
    </hbox>
  </vbox>
</window>
"
gtkdialog --center --program=FP_DLG5


if [ "$EOS_FSCRYPT_VER" == "1" ];then #20230502
 M3="$(gettext 'Unfortunately, the Flatpak sandbox conflicts with ext4 folder encryption, so the home folder is not encrypted. It is actually a symlink to an unencrypted folder in the working-partition.')"
else
 M3="$(gettext 'However, you may prefer to run some apps as the root user, a file-manager for example, where you want unfettered access to the entire filesystem, able to open, edit and save anywhere.')"
fi

#20240905
if [ "${UI_DESK_MANAGER}" == "jwm" ];then
 I3="   <text use-markup=\"true\"><label>\"<b>$(gettext 'Tray icon')</b>\"</label></text>
   <text use-markup=\"true\"><label>\"$(gettext 'An entry has been created in the menu; however, for your convenience an icon has also been created in the tray.')\"</label></text>"
else
 I3="      <text use-markup=\"true\"><label>\"<b>$(gettext 'Desktop icon')</b>\"</label></text>
      <text use-markup=\"true\"><label>\"$(gettext 'An entry has been created in the menu; however, you can also create a desktop icon.')
$(gettext 'All that you need to do is drag the icon from ROX-Filer, onto the desktop, that is it.')
$(gettext 'You can do it any time in the future, and also can delete the desktop icon by right-click and choose Remove.')\"</label></text>
      <hbox>
       <text><label>$(gettext 'Click for ROX-Filer window:')</label></text>
       <button>
        <label>ROX-Filer</label>
        <action>rox -d /home/${aAPP,,} & </action>
       </button>
      </hbox>"
fi

export aAPP #20240906
export FP_DLG6="<window title=\"$(gettext 'Flatpak Installer: notes')\" image-name=\"/usr/share/pixmaps/flatpak.png\">
  <vbox>
    <frame>
      <text use-markup=\"true\"><label>\"<b>$(gettext 'Security notes')</b>\"</label></text>
      <text use-markup=\"true\"><label>\"$(gettext 'As has been stated in the previous window, the Flatpak has been installed to run as a non-root user. In fact, each Flatpak runs as its own separate user. This provides isolation between apps, in other words, extra security.')
${M3}\"</label></text>
      <hbox>
       <text><label>$(gettext 'Click for more information:')</label></text>
       <button>
         <label>root</label>
         <action>/usr/local/flapi/notes-security & </action>
       </button>
      </hbox>
    </frame>
    
    <frame>
      ${I3}
    </frame>
    
    <hbox>
     <button ok></button>
    </hbox>
  </vbox>
</window>
"
gtkdialog --center --program=FP_DLG6

sync
###end###
