#!/bin/bash
#(c) Copyright Barry Kauler 2018, license GPLv3 (/usr/share/legal)
#rebuild the rox-filer "Open With" (Send To) right-click menu.
#optional path/name of a single .desktop file, optional prefix +/-
#called from 3buildeasydistro, 3builddistro, 
#180518 first release. 180608 mtpaint gpicview geany gimp
#181123 /.* should be /.[a-zA-Z]*
#181203 added application_x-rpm
#190117 not always get app at top right-click (ex: audacious).
#190921 add mimetypes for 'filemnt' script.
#200407 add packit "ALL" (will join bcrypt and ghasher in menu).
#20201024 added  application_vnd.debian.binary-package for petget and xarchive.
#20220113 added text_x-python3 to geany.
#20220126 add application_zstd to petget and xarchive.
#20220613 mount-img is now handler for application_easy-disk-image, not filemnt. 20220622 fix.
#20220629 add application/xhtml+xml
#20221115 add pfind inode_directory. 20221123 need pass "-d" cmd when run pfind.
#20230313 add audacity, phototool. 20230705 add gwaveedit
#20230902 add application_x-zstd to xarchive (notice 20220126).
#20231205 add application_x-7z-compressed to xarchive
#20231206 screen out firefox & vivaldi if not installed.
#20240114 fix 20230902, add .xbps
#20241020 generate usr/share/applications/mimeapps.list  20241021 20241027
#20241027 add vscode (and text/x-zig).
#20241028 add gvim
#20241030 add sublime
#20241103 want "ALL" to be top-level right-click menu.
#20241103 for "ALL", exclude some with "ALLf"
#20241107 exclude some apps from mimeapps.list
#20241109 exclude pupzip
#20241112 compromise, to speed up.
#20241222 add "i" app. ref: https://forum.puppylinux.com/viewtopic.php?t=12663  20241227
#20241222 maybe translate right-click menu entry.
#20250603 fix for building in woofQV.
#20250624 full tr: "warning: an unescaped backslash at end of string is not portable"
#20250627 fix filter-out orange-ball .desktop files.

LANGorig1="${LANG:0:2}" #20241222

export LANG=C #20241107 for speed.
mkdir -p /tmp/build-rox-sendto #20241103
#20241103 LISTz is archive files
LISTz='application_gzip application_vnd.debian.binary-package application_x-7z-compressed application_x-bzip application_x-bzip-compressed-tar application_x-bzip2 application_x-compressed-tar application_x-gzip application_x-rar application_x-tar application_x-xz application_x-xz-compressed-tar application_zip application_x-deb application_x-rpm application_zstd application_x-zstd application_zstd-compressed-tar application_x-xbps application_pet'
busybox tr ' ' '\n' <<<"${LISTz}" > /tmp/build-rox-sendto/LISTz
#20241107 exclude these from mimeapps.list ...
LISTnoma='ghasher packit uextract'
busybox tr ' ' '\n' <<<"${LISTnoma}" > /tmp/build-rox-sendto/LISTnoma

#may call this in woofQ, when current dir is sandbox3/rootfs-complete, so test...
CWD="`pwd`"
case "$CWD" in
 *rootfs-complete) true ;;
 *rootfs) true ;; #20250603 woofqv
 *) cd / ;;
esac

cDT="${1}"; cDT1=''
if [ "$cDT" ];then
 #path/name of a .desktop file passed in, "-" prefix if removing
 DTs="$cDT"
 cDT1="${cDT:0:1}"
 [ "$cDT1" == "+" ] && DTs="${cDT:1:200}"
 [ "$cDT1" == "-" ] && DTs="${cDT:1:200}"
 [ "${DTs:0:1}" == "/" ] && DTs="${DTs:1:200}" #20250627
 [ ! -f "$DTs" ] && exit 1
else
 #get rid of all of these...
 rm -rf root/.config/rox.sourceforge.net/SendTo/* 2>/dev/null
 rm -rf root/.config/rox.sourceforge.net/SendTo/.[a-zA-Z]* 2>/dev/null #181123
 mkdir -p etc/xdg/rox.sourceforge.net/OpenWith
 ln -snf OpenWith etc/xdg/rox.sourceforge.net/SendTo
 rm -rf etc/xdg/rox.sourceforge.net/SendTo/* 2>/dev/null
 rm -rf etc/xdg/rox.sourceforge.net/SendTo/.[a-zA-Z]* 2>/dev/null #181123
 DTs="$(find usr/share/applications -maxdepth 1 -type f -name '*.desktop')"
fi

#now rebuild...
echo -n '' > /tmp/build-rox-sendto/ALL #20241103
echo -n '' > /tmp/build-rox-sendto/ALLf #20241103
for aDT in $DTs
do
 #um, we do want to include these, but take out default*...
 #if grep '^NoDisplay=true' $aDT >/dev/null;then continue ; fi
 aDTbase="$(basename $aDT .desktop)"
 case $aDTbase in
  default*) continue ;;
  pupzip) continue ;; #20241109
  firefox|vivaldi) #20231206
   #these are ask entries in the menu. they have NoDisplay=true
   #need to check if installed...
   [ ! -e /usr/bin/${aDTbase} ] && continue
  ;;
 esac
 grep -q -F '/usr/local/orange/' ${aDT} #20250627 orange-ball not yet installed
 if [ $? -eq 0 ];then continue; fi
 aEXE="$(grep '^Exec=' $aDT | head -n 1 | cut -f 2 -d '=' | cut -f 1 -d ' ' | rev | cut -f 1 -d '/' | rev)"
 if [ "$aEXE" == "env" ];then #20241222
  #i.desktop has Exec=env I_GUI=true i
  aEXE="$(grep '^Exec=' $aDT | head -n 1 | cut -f 2- -d '=' | cut -f 3 -d ' ' | rev | cut -f 1 -d '/' | rev)"
 fi
 [ "$aEXE" == "" ] && continue
 #20241222 aNAME is usually just the name of the app, but sometimes translate...
 xNAME="$(grep '^Name=' $aDT | head -n 1 | cut -f 2 -d '=')"
 #aNAME="$(grep '^Name=' $aDT | head -n 1 | cut -f 2 -d '=' | cut -f 1 -d ' ')"
 aNAME="${xNAME/ */}"
 if [ "$xNAME" == "$aNAME" ];then
  #no space chars, so see if there is a translation...
  #note, ignore translation if it has a space char...
  yNAME="$(grep "^Name\[${LANGorig1}\]=" $aDT | head -n 1 | cut -f 2 -d '=' | sed '/ /d')"
  if [ -n "$yNAME" ];then
   aNAME="$yNAME" #ex: i.desktop has "Name[no]=Filinformasjon"
  fi
 fi
 aMT="$(grep '^MimeType=' $aDT | cut -f 2 -d '=' | busybox tr ';' '\n' | grep -v '^x-' | busybox tr '/' '_')"
 MIMEDIR=''
 NOT='' #20241103
 aBAD='' #MimeType= in .desktop may have inappropriate entries, screen out.
 #ref: grep '^Exec=' *.desktop | cut -f 2 -d '=' | cut -f 1 -d ' ' | rev | cut -f 1 -d '/' | rev | sort -u | sed -e 's%^%  %' -e "s%$%) MIMEDIR='' ;;%"
 aCMD='' #20221123
 case "$aEXE" in
#  AppRun) MIMEDIR='' ;;
  audacious) MIMEDIR='audio' ;;
  audacity) MIMEDIR='audio'; aNAME='Audacity' ;;
#  aumix) MIMEDIR='' ;;
  bacongui-gtk)   MIMEDIR='text' ;;
  bcrypt_gui) MIMEDIR='ALL'; echo "${aEXE}" >> /tmp/build-rox-sendto/ALL; ;; #20241103
#  bluepup) MIMEDIR='' ;;
#  bootmanager) MIMEDIR='' ;;
  burniso2cd)     MIMEDIR='application_x-cd-image' ;;
#  cdburner-wizard) MIMEDIR='' ;;
#  cgtkcalc) MIMEDIR='' ;;
#  check_deps.sh) MIMEDIR='' ;;
#  childproof) MIMEDIR='' ;;
#  chooselocale) MIMEDIR='' ;;
  chrome|chromium) MIMEDIR='text_html application_xhtml+xml' ;;
#  connectwizard) MIMEDIR='' ;;
#  cups_shell) MIMEDIR='' ;;
#  defaultbrowser) MIMEDIR='' ;;
#  defaultchmviewer) MIMEDIR='' ;;
#  defaultimageviewer) MIMEDIR='' ;;
#  defaultmediaplayer) MIMEDIR='' ;;
#  defaultpdfviewer) MIMEDIR='' ;;
#  defaults-chooser) MIMEDIR='' ;;
#  defaultspreadsheet) MIMEDIR='' ;;
#  defaulttexteditor) MIMEDIR='' ;;
#  defaultwordprocessor) MIMEDIR='' ;;
  dia)            MIMEDIR='application_x-dia-diagram image' ;;
#  didiwiki-gui) MIMEDIR='' ;;
#  dropbox_gui) MIMEDIR='' ;;
#  easy-bootmanager) MIMEDIR='' ;;
#  easy-containers) MIMEDIR='' ;;
  easydd)         MIMEDIR='application_x-gzip' ;;
#  easy-installer) MIMEDIR='' ;;
#  easy-remaster) MIMEDIR='' ;;
#  easyshare) MIMEDIR='' ;;
#  easy-version-control) MIMEDIR='' ;;
#  ec-chroot) MIMEDIR='' ;;
#  eventmanager) MIMEDIR='' ;;
  evince)         MIMEDIR='application_pdf application_postscript'; aBAD='image_' ;;
#  ffconvert) MIMEDIR='' ;;
  #190921... 20220613 removed application_easy-disk-image...
  filemnt) MIMEDIR='application_x-cd-image application_x-ext2-image application_x-ext3-image application_x-ext4-image application_x-squashfs-image' ;;
  firefox)        MIMEDIR='text_html application_xhtml+xml' ;;
#  firewall_ng) MIMEDIR='' ;;
#  Floppy_Formatter) MIMEDIR='' ;;
#  flsynclient) MIMEDIR='' ;;
#  fluid) MIMEDIR='' ;;
#  fpm2) MIMEDIR='' ;;
#  frisbee) MIMEDIR='' ;;
#  galculator) MIMEDIR='' ;;
#  gcolorsel) MIMEDIR='' ;;
#  gdmap) MIMEDIR='' ;;
  geany)          MIMEDIR='text_plain text_x-chdr text_x-csrc text_x-c++hdr text_x-c++src text_x-java text_x-dsrc text_x-pascal text_x-perl text_x-python application_x-php application_x-httpd-php3 application_x-httpd-php4 application_x-httpd-php5 application_xml text_html text_css text_x-sql text_x-diff image_x-xpixmap application_xml application_javascript application_x-shellscript text_x-python3 text_x-nim' ;;
#  getflash) MIMEDIR='' ;;
#  gfnrename) MIMEDIR='' ;;
#  gfontsel) MIMEDIR='' ;;
#  gftp) MIMEDIR='' ;;
  ghasher)        MIMEDIR='ALL'; echo "${aEXE}" >> /tmp/build-rox-sendto/ALL; ;; #20241103
#  ghostview) MIMEDIR='' ;;
  gimp)           MIMEDIR='image_bmp image_g3fax image_gif image_x-fits image_x-pcx image_x-portable-anymap image_x-portable-bitmap image_x-portable-graymap image_x-portable-pixmap image_x-psd image_x-sgi image_x-tga image_x-xbitmap image_x-xwindowdump image_x-xcf image_x-compressed-xcf image_x-gimp-gbr image_x-gimp-pat image_x-gimp-gih image_tiff image_jpeg image_x-psp image_png image_x-icon image_x-xpixmap image_svg+xml application_pdf image_jp2 image_jpeg2000 image_jpx image_x-xcursor' ;;
#  glipper_shell) MIMEDIR='' ;;
#  gmeasures_wrapper) MIMEDIR='' ;;
  gnome-mpv)      MIMEDIR='video' ;;
#  gparted_shell) MIMEDIR='' ;;
  gpicview)       MIMEDIR='image_bmp image_gif image_jpeg image_jpg image_png image_tiff image_x-bmp image_x-pcx image_x-tga image_x-portable-pixmap image_x-portable-bitmap image_x-targa image_x-portable-greymap application_pcx image_svg+xml image_svg-xml' ;;
#  gpptp) MIMEDIR='' ;;
  grisbi)         MIMEDIR='application_x-grisbi' ;;
#  gtk3-demo) MIMEDIR='' ;;
#  gtk3-icon-browser) MIMEDIR='' ;;
#  gtk3-widget-factory) MIMEDIR='' ;;
#  gtk_chtheme_wrapper) MIMEDIR='' ;;
#  gtklp) MIMEDIR='' ;;
#  gtklpq) MIMEDIR='' ;;
  gvim)    MIMEDIR='text_plain text_x-chdr text_x-csrc text_x-c++hdr text_x-c++src text_x-java text_x-dsrc text_x-pascal text_x-perl text_x-python application_x-php application_x-httpd-php3 application_x-httpd-php4 application_x-httpd-php5 application_xml text_html text_css text_x-sql text_x-diff image_x-xpixmap application_xml application_javascript application_x-shellscript text_x-python3 text_x-nim text_x-zig' ;;
  gwaveedit) MIMEDIR='audio'; aNAME='gWaveEdit' ;;
#  gwhere) MIMEDIR='' ;;
#  hardinfo) MIMEDIR='' ;;
  homebank)       MIMEDIR='application_x-homebank' ;;
  i)              MIMEDIR='inode_directory application_easy-disk-image application_gzip application_pet application_vnd-debian-binary-package application_x-bzip-compressed-tar application_x-cpio application_x-compressed-tar application_x-linux-kernel application_x-squashfs-image application_x-tar application_x-xbps application_x-xz-compressed-tar applicatio_zip application_zstd-compressed-tar text_x-log text_x-patch'; echo "${aEXE}" >> /tmp/build-rox-sendto/ALLf; ;; #20241222 20241227
#  iconfinder) MIMEDIR='' ;;
#  icon_switcher) MIMEDIR='' ;;
  inkscape)       MIMEDIR='image' ;;
  inkscapelite)   MIMEDIR='image' ;;
#  input-wizard) MIMEDIR='' ;;
#  ipinfo) MIMEDIR='' ;;
  isomaster)      MIMEDIR='application_x-cd-image' ;;
#  jwmdesk) MIMEDIR='' ;;
  leafpad)        MIMEDIR='text image_x-xpixmap application_xml application_javascript' ;;
#  lmarbles) MIMEDIR='' ;;
#  loginmanager) MIMEDIR='' ;;
  mhwaveedit) MIMEDIR='audio' ;;
#  momanager) MIMEDIR='' ;;
#  momanager0) MIMEDIR='' ;;
  mount-img) MIMEDIR='application_easy-disk-image' ;;
#  mozaddressbook) MIMEDIR='' ;;
#  mozchat) MIMEDIR='' ;;
  mozedit)        MIMEDIR='text_html application_xhtml+xml'; aNAME='SeaMonkey-Composer' ;;
  mozilla)        MIMEDIR='text_html application_xhtml+xml'; aNAME='SeaMonkey-Browser' ;;
#  mozmail) MIMEDIR='' ;;
  mtpaint)        MIMEDIR='image_bmp image_x-bmp image_x-ms-bmp image_gif image_jpeg image_jpg image_pjpeg image_x-pcx image_png image_x-png image_x-portable-anymap image_x-portable-bitmap image_x-portable-graymap image_x-portable-pixmap image_svg image_svg+xml image_x-tga image_tiff image_webp image_xbm image_x-xbm image_x-xbitmap image_xpm image_x-xpm image_x-xpixmap' ;;
#  mtpaintsnapshot.sh) MIMEDIR='' ;;
#  mtr) MIMEDIR='' ;;
#  Multiple-Sound-Card-Wizard) MIMEDIR='' ;;
  notecase)       MIMEDIR='application_x-notecase application_x-notecase-enc' ;;
#  osmo) MIMEDIR='' ;;
  openshot)       MIMEDIR='video'; aNAME='OpenShot'; ;;
  packit|PackIt)         MIMEDIR='ALLf'; echo "${aEXE}" >> /tmp/build-rox-sendto/ALLf; ;; #20241103
#  partview) MIMEDIR='' ;;
#  pbackup) MIMEDIR='' ;;
  pburn)          MIMEDIR='application_x-cd-image' ;;
#  pcd) MIMEDIR='' ;;
#  pcdripper) MIMEDIR='' ;;
#  pcreatetorrent) MIMEDIR='' ;;
#  pctorrent) MIMEDIR='' ;;
#  pcur) MIMEDIR='' ;;
#  pdict) MIMEDIR='' ;;
#  Pdisk) MIMEDIR='' ;;
#  pdvdrsab) MIMEDIR='' ;;
#  peasydisc) MIMEDIR='' ;;
#  peasypdf) MIMEDIR='' ;;
#  peasyport) MIMEDIR='' ;;
#  peasyprint) MIMEDIR='' ;;
#  peasyscale) MIMEDIR='' ;;
#  peasyscan) MIMEDIR='' ;;
  petget)         MIMEDIR='application_pet application_vnd.debian.binary-package application_x-deb application_x-bzip-compressed-tar application_x-xz-compressed-tar application_x-rpm application_zstd' ;;
  pfind) MIMEDIR='inode_directory'; aNAME='pFind'; aCMD='pfind -d $1' ;;
  phototool) MIMEDIR='image'; aNAME='PhotoTool' ;;
#  picpuz-wrapper) MIMEDIR='' ;;
#  pidginshell) MIMEDIR='' ;;
#  pkg_chooser.sh) MIMEDIR='' ;;
  planner)        MIMEDIR='application_x-planner' ;;
#  pmetatagger) MIMEDIR='' ;;
#  pmirror) MIMEDIR='' ;;
#  pmount) MIMEDIR='' ;;
  pmusic)         MIMEDIR='audio' ;;
#  pmwget) MIMEDIR='' ;;
#  ppg-gui.sh) MIMEDIR='' ;;
#  pplog_gui) MIMEDIR='' ;;
#  pprocess) MIMEDIR='' ;;
#  precord) MIMEDIR='' ;;
#  prun) MIMEDIR='' ;;
#  pschedule) MIMEDIR='' ;;
#  pstopwatch) MIMEDIR='' ;;
#  psync) MIMEDIR='' ;;
#  ptimer) MIMEDIR='' ;;
#  Pudd) MIMEDIR='' ;;
#  pup-advert-blocker) MIMEDIR='' ;;
#  PupApps) MIMEDIR='' ;;
#  pupcamera) MIMEDIR='' ;;
#  PupControl) MIMEDIR='' ;;
#  puppypdf) MIMEDIR='' ;;
#  pupradio) MIMEDIR='' ;;
#  pupscan) MIMEDIR='' ;;
#  Pup-SysInfo) MIMEDIR='' ;;
#  pupwhois) MIMEDIR='' ;;
#  pupx) MIMEDIR='' ;;
  pupzip|xarchive|xarchiver) MIMEDIR='application_gzip application_vnd.debian.binary-package application_x-7z-compressed application_x-bzip application_x-bzip-compressed-tar application_x-bzip2 application_x-compressed-tar application_x-gzip application_x-rar application_x-tar application_x-xz application_x-xz-compressed-tar application_zip application_x-deb application_x-rpm application_zstd application_x-zstd application_zstd-compressed-tar application_x-xbps' ;;
#  pwsget) MIMEDIR='' ;;
#  qsync) MIMEDIR='' ;;
#  quicksetup) MIMEDIR='' ;;
#  qwallpaper) MIMEDIR='' ;;
#  remove_builtin) MIMEDIR='' ;;
#  rox) MIMEDIR='' ;;
#  rubix) MIMEDIR='' ;;
#  rxvt) MIMEDIR='' ;;
#  sakura) MIMEDIR='' ;;
  sbase|lobase) MIMEDIR='application_vnd.oasis.opendocument.database'; aNAME='LibreOffice-Base' ;;
  scalc|localc) MIMEDIR='application_vnd.ms-excel application_vnd.oasis.opendocument.spreadsheet application_vnd.openxmlformats-officedocument.spreadsheetml.sheet application_vnd.openxmlformats-officedocument.spreadsheetml.template text_csv'; aNAME='LibreOffice-Calc' ;;
#  screeny) MIMEDIR='' ;;
  scribus)      MIMEDIR='application_vnd.scribus'; aNAME='Scribus' ;;
  sdraw|lodraw)       MIMEDIR='image application_vnd.oasis.opendocument.graphics application_vnd.oasis.opendocument.graphics-template application_vnd.oasis.opendocument.image'; aNAME='LibreOffice-Draw' ;;
#  securetelnetshell) MIMEDIR='' ;;
#  set_hwclock_type) MIMEDIR='' ;;
#  set-time-for-puppy) MIMEDIR='' ;;
#  set-xftdpi) MIMEDIR='' ;;
#  sfsget) MIMEDIR='' ;;
#  sh) MIMEDIR='' ;;
  shotcut)      MIMEDIR='video'; aNAME='ShotCut'; ;;
  simpress|loimpress) MIMEDIR='application_vnd.oasis.opendocument.presentation application_vnd.oasis.opendocument.presentation-template application_vnd.ms-powerpoint application_vnd.openxmlformats-officedocument.presentationml.presentation application_vnd.openxmlformats-officedocument.presentationml.template application_vnd.openxmlformats-officedocument.presentationml.slideshow'; aNAME='LibreOffice-Impress' ;;
#  sscontrol) MIMEDIR='' ;;
#  ssh-gui) MIMEDIR='' ;;
  sublime)    MIMEDIR='text_plain text_x-chdr text_x-csrc text_x-c++hdr text_x-c++src text_x-java text_x-dsrc text_x-pascal text_x-perl text_x-python application_x-php application_x-httpd-php3 application_x-httpd-php4 application_x-httpd-php5 application_xml text_html text_css text_x-sql text_x-diff image_x-xpixmap application_xml application_javascript application_x-shellscript text_x-python3 text_x-nim text_x-zig' ;;
  swriter|lowriter) MIMEDIR='text application_msword application_vnd.openxmlformats-officedocument.wordprocessingml.document application_vnd.openxmlformats-officedocument.wordprocessingml.template application_vnd.oasis.opendocument.text application_vnd.oasis.opendocument.text-template application_vnd.oasis.opendocument.text-web application_vnd.oasis.opendocument.text-master application_xml application_rtf'; aNAME='LibreOffice-Writer' ;;
#  timezone-set) MIMEDIR='' ;;
#  toppler) MIMEDIR='' ;;
#  uget-gtk) MIMEDIR='' ;;
#  urxvtcontrol) MIMEDIR='' ;;
#  video_upgrade_wizard) MIMEDIR='' ;;
  vscode)    MIMEDIR='text_plain text_x-chdr text_x-csrc text_x-c++hdr text_x-c++src text_x-java text_x-dsrc text_x-pascal text_x-perl text_x-python application_x-php application_x-httpd-php3 application_x-httpd-php4 application_x-httpd-php5 application_xml text_html text_css text_x-sql text_x-diff image_x-xpixmap application_xml application_javascript application_x-shellscript text_x-python3 text_x-nim text_x-zig' ;;
#  wcpufreq) MIMEDIR='' ;;
#  wizardwizard) MIMEDIR='' ;;
#  xcalc) MIMEDIR='' ;;
#  xclipboard) MIMEDIR='' ;;
#  xconsole) MIMEDIR='' ;;
#  xdelta_gui) MIMEDIR='' ;;
#  xfdiff-cut) MIMEDIR='' ;;
#  xfontsel) MIMEDIR='' ;;
  xine*)    MIMEDIR='audio video'; aBAD='image_' ;;
#  xorgwizard) MIMEDIR='' ;;
#  xsane) MIMEDIR='' ;;
#  xsoldier) MIMEDIR='' ;;
#  xvkbd-wrapper) MIMEDIR='' ;;
#  ycalc) MIMEDIR='' ;;
#  youtubedl) MIMEDIR='' ;;
  viewnior)       MIMEDIR='image' ;;
 esac
 
 if [ "$aMT" ];then #some .desktop files have MimeType=... entry
  #evince.desktop has image_* blob wildcard
  #also, some have inappropriate mime-type
  if [ "$aBAD" ];then
   xaBAD="$(echo "$aBAD" | busybox tr ' ' '\n')"
   echo "$xaBAD" > /tmp/build-rox-sendto/brs-xabad
   MIMEDIR="$(echo "$aMT" | grep -v -f /tmp/build-rox-sendto/brs-xabad | sed -e 's%\*.*%%' -e 's%_$%%' | busybox tr '\n' ' ' | sed -e 's% $%%')"
  else
   MIMEDIR="$(echo "$aMT" | sed -e 's%\*.*%%' -e 's%_$%%' | busybox tr '\n' ' ' | sed -e 's% $%%')"
  fi
 fi
 
 [ "$MIMEDIR" == "" ] && continue
 if [ "$MIMEDIR" == "ALLf" ];then
  #20241103 ALLf handled further down...
  continue
 fi
 if [ "$MIMEDIR" == "ALL" ];then
  if [ "$cDT1" == "-" ];then
   rm -f etc/xdg/rox.sourceforge.net/SendTo/${aNAME} 2>/dev/null
  else
   #this will be inside "Open With..." entry in right-click...
   ln -snf /${aDT} etc/xdg/rox.sourceforge.net/SendTo/${aNAME}
  fi
  continue
 fi
 for aMD in ${MIMEDIR}
 do
  if [ "$cDT1" == "-" ];then
   rm -f etc/xdg/rox.sourceforge.net/SendTo/.${aMD}/${aNAME} 2>/dev/null
  else
   [ ! -d etc/xdg/rox.sourceforge.net/SendTo/.${aMD} ] && mkdir etc/xdg/rox.sourceforge.net/SendTo/.${aMD}
   if [ "$aCMD" ];then #20221123
    echo -e "#!/bin/ash\nexec ${aCMD}" > etc/xdg/rox.sourceforge.net/SendTo/.${aMD}/${aNAME}
    chmod 755 etc/xdg/rox.sourceforge.net/SendTo/.${aMD}/${aNAME}
   else
    ln -snf /${aDT} etc/xdg/rox.sourceforge.net/SendTo/.${aMD}/${aNAME}
   fi
   #190117 not always get app at top right-click (ex: audacious)...
   case "$aMD" in
    audio)
     #190921 generate list of all audio file types...
     #aALL="$(find /etc/xdg/rox.sourceforge.net/OpenWith -mindepth 1 -maxdepth 1 -name '.audio_*' | sed -e 's%^/etc/xdg/rox\.sourceforge\.net/OpenWith/\.%%' | sort | busybox tr '\n' ' ')"
     #ex: audio_168sv audio_3gpp audio_3gpp2 audio_8svx audio_aac audio_ac3 audio_aiff audio_amr audio_AMR audio_amr-wb audio_annodex audio_basic audio_dv audio_eac3 audio_flac audio_m3u audio_m4a audio_midi audio_mp1 audio_mp2 audio_mp3 audio_mp4 audio_mpeg audio_mpeg2 audio_mpeg3 audio_mpegurl audio_mpg audio_musepack audio_ogg audio_opus audio_rn-mpeg audio_scpls audio_vnd.dolby.heaac.1 audio_vnd.dolby.heaac.2 audio_vnd.dolby.mlp audio_vnd.dts audio_vnd.dts.hd audio_vnd.rn-realaudio audio_vorbis audio_wav audio_webm audio_x-16sv audio_x-8svx audio_x-aac audio_x-adpcm audio_x-aiff audio_x-annodex audio_x-ape audio_x-basic audio_x-flac audio_x-gsm audio_x-it audio_x-m4a audio_x-matroska audio_x-mod audio_x-mp1 audio_x-mp2 audio_x-mp3 audio_x-mpeg audio_x-mpeg2 audio_x-mpeg3 audio_x-mpegurl audio_x-mpg audio_x-ms-asf audio_x-ms-wax audio_x-ms-wma audio_x-ms-wvx audio_x-musepack audio_x-ogg audio_x-pls audio_x-pn-aiff audio_x-pn-au audio_x-pn-realaudio audio_x-pn-realaudio-plugin audio_x-pn-wav audio_x-pn-windows-acm audio_x-pn-windows-pcm audio_x-real-audio audio_x-realaudio audio_x-s3m audio_x-scpls audio_x-shorten audio_x-speex audio_x-tta audio_x-vorbis audio_x-vorbis+ogg audio_x-wav audio_x-wavpack audio_x-xm
     #for aAUDIO in audio_annodex audio_x-annodex audio_x-ms-wma audio_mpegurl audio_x-mpegurl audio_x-scpls audio_x-ms-wax audio_x-ms-wvx audio_x-m4a audio_mp4 audio_x-aiff audio_aiff audio_x-pn-aiff audio_x-flac audio_flac audio_x-realaudio audio_basic audio_x-basic audio_x-pn-au audio_x-pn-realaudio audio_x-pn-realaudio-plugin audio_x-real-audio audio_x-8svx audio_8svx audio_x-16sv audio_168sv audio_ogg audio_x-ogg audio_ac3 audio_x-wav audio_wav audio_x-pn-wav audio_x-pn-windows-acm audio_musepack audio_x-musepack audio_mpeg2 audio_x-mpeg2 audio_mpeg3 audio_x-mpeg3 audio_mpeg audio_x-mpeg audio_x-mpegurl audio_mpegurl audio_mp3 audio_x-mp3
     for aAUDIO in audio_168sv audio_3gpp audio_3gpp2 audio_8svx audio_aac audio_ac3 audio_aiff audio_amr audio_AMR audio_amr-wb audio_annodex audio_basic audio_dv audio_eac3 audio_flac audio_m3u audio_m4a audio_midi audio_mp1 audio_mp2 audio_mp3 audio_mp4 audio_mpeg audio_mpeg2 audio_mpeg3 audio_mpegurl audio_mpg audio_musepack audio_ogg audio_opus audio_rn-mpeg audio_scpls audio_vnd.dolby.heaac.1 audio_vnd.dolby.heaac.2 audio_vnd.dolby.mlp audio_vnd.dts audio_vnd.dts.hd audio_vnd.rn-realaudio audio_vorbis audio_wav audio_webm audio_x-16sv audio_x-8svx audio_x-aac audio_x-adpcm audio_x-aiff audio_x-annodex audio_x-ape audio_x-basic audio_x-flac audio_x-gsm audio_x-it audio_x-m4a audio_x-matroska audio_x-mod audio_x-mp1 audio_x-mp2 audio_x-mp3 audio_x-mpeg audio_x-mpeg2 audio_x-mpeg3 audio_x-mpegurl audio_x-mpg audio_x-ms-asf audio_x-ms-wax audio_x-ms-wma audio_x-ms-wvx audio_x-musepack audio_x-ogg audio_x-pls audio_x-pn-aiff audio_x-pn-au audio_x-pn-realaudio audio_x-pn-realaudio-plugin audio_x-pn-wav audio_x-pn-windows-acm audio_x-pn-windows-pcm audio_x-real-audio audio_x-realaudio audio_x-s3m audio_x-scpls audio_x-shorten audio_x-speex audio_x-tta audio_x-vorbis audio_x-vorbis+ogg audio_x-wav audio_x-wavpack audio_x-xm
     do
      [ ! -d etc/xdg/rox.sourceforge.net/SendTo/.${aAUDIO} ] && mkdir etc/xdg/rox.sourceforge.net/SendTo/.${aAUDIO}
      ln -snf /${aDT} etc/xdg/rox.sourceforge.net/SendTo/.${aAUDIO}/${aNAME}
     done
     #190921 to avoid duplication in Open With menu, delete this:
     rm -f etc/xdg/rox.sourceforge.net/SendTo/.audio/${aNAME}
    ;;
   esac
  fi
 done
 
done

#20241112 compromise, to speed up, get out...
if [ -n "${cDT}" ];then exit; fi

#20241020 generate usr/share/applications/mimeapps.list
echo -n '' > /tmp/build-rox-sendto/mimeapps.list-tmp
echo '[Default Applications]' > usr/share/applications/mimeapps.list
#scan etc/xdg/rox.sourceforge.net/OpenWith...
MIMEscan="$(find etc/xdg/rox.sourceforge.net/OpenWith -type l | xargs -I XXX ls -l XXX)"
#ex: lrwxrwxrwx 1 root root 35 Oct 19 21:40 etc/xdg/rox.sourceforge.net/OpenWith/.video_x-theora+ogg/VLC -> /usr/share/applications/vlc.desktop
while read aM
do
 Mtype="$(echo -n "$aM" | cut -f 5 -d '/' | busybox tr '_' '/')" #ex: .video/x-theora
 [ "${Mtype:0:1}" != "." ] && continue
 Mtype="${Mtype:1:99}"
 Mdt="${aM##*/}" #ex: vlc.desktop
 [ "${Mdt/desktop/}" = "${Mdt}" ] && continue
 grep -q -F '/usr/local/orange/' usr/share/applications/${Mdt} #20241021 orange-ball not yet installed
 if [ $? -eq 0 ];then continue; fi
 grep -q -F 'NoDisplay=true' usr/share/applications/${Mdt} #20241027
 if [ $? -eq 0 ];then continue; fi
 #20241107 exclude some...
 Mname="${Mdt/.desktop/}"
 grep -q -x -f /tmp/build-rox-sendto/LISTnoma <<<"${Mname}"
 if [ $? -eq 0 ];then continue; fi
 #20241106 fix format...
 grep -q -F "${Mtype}=" /tmp/build-rox-sendto/mimeapps.list-tmp
 if [ $? -eq 0 ];then
  sed -i -e "s%\(${Mtype}=.*\)%\1;${Mdt}%" /tmp/build-rox-sendto/mimeapps.list-tmp
 else
  echo "${Mtype}=${Mdt}" >> /tmp/build-rox-sendto/mimeapps.list-tmp
 fi
 
 #20241103 for "ALLf" want right-click top-level menu entries for all cases...
 if [ -s /tmp/build-rox-sendto/ALLf ];then
  xMtype="$(echo -n "$Mtype" | busybox tr '/' '_')" #ex: video_x-theora hmmm there is also application/xhtml/xml
  #exclude archive files...
  grep -q -x -F -f /tmp/build-rox-sendto/LISTz <<<"${xMtype}"
  if [ $? -eq 0 ];then continue; fi
  for aALL in $(cat /tmp/build-rox-sendto/ALLf | busybox tr '\' ' ')
  do
   #20241222 aNAME is usually just the name of the app, but sometimes translate...
   #aNAME="$(grep '^Name=' usr/share/applications/${aALL}.desktop | head -n 1 | cut -f 2 -d '=' | cut -f 1 -d ' ')"
   xNAME="$(grep '^Name=' usr/share/applications/${aALL}.desktop | head -n 1 | cut -f 2 -d '=')"
   aNAME="${xNAME/ */}"
   if [ "$xNAME" == "$aNAME" ];then
    #no space chars, so see if there is a translation...
    #note, ignore translation if it has a space char...
    yNAME="$(grep "^Name\[${LANGorig1}\]=" usr/share/applications/${aALL}.desktop | head -n 1 | cut -f 2 -d '=' | sed '/ /d')"
    if [ -n "$yNAME" ];then
     aNAME="$yNAME" #ex: i.desktop has "Name[no]=Informasjon"
    fi
   fi
   if [ "$cDT1" == "-" ];then
    #ex: DTs=/usr/share/applications/abiword.desktop
    if [ "/usr/share/applications/${aALL}.desktop" == "${DTs}" ];then
     rm -f etc/xdg/rox.sourceforge.net/SendTo/.${xMtype}/${aNAME}
     continue
    fi
   fi
   ln -snf /usr/share/applications/${aALL}.desktop etc/xdg/rox.sourceforge.net/SendTo/.${xMtype}/${aNAME}
  done
 fi
 
done <<<"${MIMEscan}"

sort -u /tmp/build-rox-sendto/mimeapps.list-tmp >> usr/share/applications/mimeapps.list

echo '
[Added Associations]
' >> usr/share/applications/mimeapps.list


###END###
