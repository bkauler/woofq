#!/bin/ash
#20220526 called from /usr/bin/wmpoweroff & wmreboot, when EOS_TOP_LEVEL_ZRAM==1 WOOFQONLYMARKER
#ask if save zram to .session folder. the actual save is done in /etc/rc.d/rc.shutdown
#20220527 passed in "shutdown" or "running", anything else=running
#20220529 rw layer is now /mnt/.easy_rw/mainrw, plus www, console, etc folders for containers.
#20220710 slight text msg change.
#20220712 button to toggle on/off top-level-zram.
#20220716 at shutdown have a simpler gui.
#20221110 wmreboot, wmpoweroff have killed rox, so cleaner desktop.

export TEXTDOMAIN=savesession
export OUTPUT_CHARSET=UTF-8

STATUS="$1" #shutdown or running, anything else=running.
. /etc/rc.d/PUPSTATE
CR='
'

#20220712
TLZtoggle="false"
TLZflg="$EOS_TOP_LEVEL_ZRAM"
if [ -s /mnt/${WKG_DEV}/${WKG_DIR}.zramtl.flg ];then
 TLZflg="$(cat /mnt/${WKG_DEV}/${WKG_DIR}.zramtl.flg)" #1 or 0
fi
if [ "$EOS_TOP_LEVEL_ZRAM" == "1" ];then #from PUPSTATE, set by initrd.
 [ "$TLZflg" == "0" ] && TLZtoggle="true"
else
 [ "$TLZflg" == "1" ] && TLZtoggle="true"
fi

###direct write###
##############################
if [ "$EOS_TOP_LEVEL_ZRAM" != "1" ];then
 export SS_DLG0="<window title=\"$(gettext "Save session")\" icon-name=\"gtk-convert\">
 <vbox>
  <text use-markup=\"true\"><label>\"<b>$(gettext 'Traditional direct-write to drive is enabled. Session-saving is disabled.')</b>\"</label></text>
  <frame $(gettext 'Toggle-on session in RAM')>
   <hbox>
    <vbox>
     <checkbox>
      <label>\"\"</label>
      <default>${TLZtoggle}</default>
      <variable>TURNONTLZ</variable>
     </checkbox>
    </vbox>
    <text><label>$(gettext 'Tick checkbox to restore session in RAM; session-saving will then be required. It will take effect at next bootup.')</label></text>
   </hbox>
  </frame>
  <hbox>
   <button ok></button>
  </hbox>
 </vbox>
</window>"

 RETSTRING0="$(gtkdialog --program=SS_DLG0 --center)"
 [ $? -ne 0 ] && exit
 echo "$RETSTRING0" | grep -q '^EXIT="abort"'
 if [ $? -eq 0 ];then
  exit
 fi
 echo "$RETSTRING0" | grep -q '^TURNONTLZ="true"'
 if [ $? -eq 0 ];then
  echo -n '1' > /mnt/${WKG_DEV}/${WKG_DIR}.zramtl.flg
 else
  echo -n '0' > /mnt/${WKG_DEV}/${WKG_DIR}.zramtl.flg
 fi
 exit
fi
##############################

###top-level-zram###
##############################
if [ ! -s /var/local/zram1-ask-save-shutdown ];then
 CHK_ASK_DEF='true'
else
 CHK_ASK_DEF="$(cat /var/local/zram1-ask-save-shutdown)"
fi

if [ ! -s /var/local/zram1-save-shutdown-auto ];then
 CHK_AUTO_DEF='false'
else
 CHK_AUTO_DEF="$(cat /var/local/zram1-save-shutdown-auto)"
fi

RAD_DEF_1=false; RAD_DEF_2=false; RAD_DEF_3=false
case ${CHK_ASK_DEF}${CHK_AUTO_DEF} in
 falsefalse) RAD_DEF_1=false; RAD_DEF_2=false; RAD_DEF_3=true ;;
 falsetrue)  RAD_DEF_1=false; RAD_DEF_2=true; RAD_DEF_3=false ;;
 truefalse)  RAD_DEF_1=true; RAD_DEF_2=false; RAD_DEF_3=false ;;
 *)          RAD_DEF_1=true; RAD_DEF_2=false; RAD_DEF_3=false ;; #truetrue
esac

if [ "$STATUS" == "shutdown" ];then #20220716
 #at shutdown, have a simpler gui...
 #export SS_DLG0="<window title=\"$(gettext "Save session")\" icon-name=\"gtk-convert\">
 export SS_DLG0="<window decorated=\"false\" skip_taskbar_hint=\"true\">
 <vbox>
  <text use-markup=\"true\">
   <label>\"<b>$(gettext 'Do you want to save the current session?')</b>\"</label>
  </text>
  <text use-markup=\"true\">
   <label>\"$(gettext 'EasyOS is running in RAM, with the exception that any files saved in <i>/files</i> are already saved in the working-partition.')

$(gettext 'Anything else done since bootup, such as installed packages, browser history and bookmarks, are in RAM.')

$(gettext 'All of your work in RAM is referred to as the <i>current session</i>, and you may choose to save it.') $(gettext 'Note, it is recommended to close all applications before saving.')
$(gettext 'Usually you will probably want to save, unless you want to forget everything that has happened in this session!')

<b>$(gettext 'Save configuration:')</b>
$(gettext 'While EasyOS is running, you will see a <b>save</b> icon on the desktop, with saving choices. It will enable you to choose automatic save or not-save without asking, or to completely disable saving and restore traditional direct writes to the drive.')
\"</label>
  </text>
  <hbox>
   <text><label>$(gettext 'Click SAVE SESSION button to save:')</label></text>
   <button><label>$(gettext 'DO NOT SAVE')</label><action type=\"exit\">no</action></button>
   <button><label>$(gettext 'SAVE SESSION')</label><action type=\"exit\">yes</action></button>
  </hbox>
 </vbox>
</window>"
 RETSTRING0="$(gtkdialog --program=SS_DLG0 --center)"
 [ $? -ne 0 ] && exit
 echo "$RETSTRING0" | grep -q '^EXIT="abort"'
 if [ $? -eq 0 ];then
  exit
 fi
 
else
 export SS_DLG0="<window title=\"$(gettext "Save session")\" icon-name=\"gtk-convert\">
 <vbox>
  <text use-markup=\"true\">
   <label>\"<b>$(gettext 'Do you want to save the current session?')</b>\"</label>
  </text>
  <text use-markup=\"true\">
   <label>\"$(gettext 'EasyOS is running in RAM, with the exception that any files saved in <i>/files</i> are already saved on the working-partition.')

$(gettext 'Anything else done since bootup, such as installed packages, browser history and bookmarks, are in RAM.')

$(gettext 'All of your work in RAM is referred to as the <i>current session</i>, and you may choose to save it.') $(gettext 'Note, it is recommended to close all applications before saving.')
$(gettext 'Usually you will probably want to save, unless you want to forget everything that has happened in this session!')
\"</label>
  </text>
  
  <frame $(gettext 'Save at shutdown')>
    <radiobutton>
     <label>$(gettext 'Ask at every shutdown')</label>
     <default>${RAD_DEF_1}</default>
     <variable>RAD_1</variable>
    </radiobutton>
    <radiobutton>
     <label>$(gettext 'Automatic save at every shutdown')</label>
     <default>${RAD_DEF_2}</default>
     <variable>RAD_2</variable>
    </radiobutton>
    <radiobutton>
     <label>$(gettext 'Automatic do not save at every shutdown')</label>
     <default>${RAD_DEF_3}</default>
     <variable>RAD_3</variable>
    </radiobutton>
    
  </frame>
  
  <frame $(gettext 'Toggle-off session in RAM')>
   <hbox>
    <vbox>
     <checkbox>
      <label>\"\"</label>
      <default>${TLZtoggle}</default>
      <variable>TURNOFFTLZ</variable>
     </checkbox>
    </vbox>
    <text><label>$(gettext 'Tick checkbox to restore traditional behaviour; direct writes to the drive. This is acceptable with a HDD or good quality SSD.') $(gettext 'It will take effect at next bootup.')</label></text>
   </hbox>
  </frame>
  
  <text><label>\"   \"</label></text>
  
  <hbox>
   <text><label>Click SAVE SESSION button to save now:</label></text>
   <button><label>$(gettext 'DO NOT SAVE')</label><action type=\"exit\">no</action></button>
   <button><label>$(gettext 'SAVE SESSION')</label><action type=\"exit\">yes</action></button>
  </hbox>

 </vbox>
</window>"

 RETSTRING0="$(gtkdialog --program=SS_DLG0 --center)"
 [ $? -ne 0 ] && exit
 echo "$RETSTRING0" | grep -q '^EXIT="abort"'
 if [ $? -eq 0 ];then
  exit
 fi
 
 echo "$RETSTRING0" | grep -q '^TURNOFFTLZ="true"'
 if [ $? -eq 0 ];then
  echo -n '0' > /mnt/${WKG_DEV}/${WKG_DIR}.zramtl.flg
 else
  echo -n '1' > /mnt/${WKG_DEV}/${WKG_DIR}.zramtl.flg
 fi
 
 echo "$RETSTRING0" | grep -q 'RAD_1="true"'
 if [ $? -eq 0 ];then
  echo -n 'true' > /var/local/zram1-ask-save-shutdown
 else
  echo -n 'false' > /var/local/zram1-ask-save-shutdown
 fi
 
 echo "$RETSTRING0" | grep -q 'RAD_2="true"'
 if [ $? -eq 0 ];then
  echo -n 'true' > /var/local/zram1-save-shutdown-auto
 else
  echo -n 'false' > /var/local/zram1-save-shutdown-auto
 fi
fi #20220716

echo "$RETSTRING0" | grep -q 'EXIT="yes"'
if [ $? -eq 0 ];then
 echo -n 'yes' > /tmp/ask-save-zram1-answer
else
 echo -n 'no' > /tmp/ask-save-zram1-answer
 exit
fi

if [ "$STATUS" == "shutdown" ];then #rc.shutdown will save the session.
 exit
fi

#20220527 transit save, will be completed by initrd...
#20220529 initrd now needs to look at subfolders under .session-transit
Ms1="$(gettext 'Saving session...')"
popup "background=#FFC060 level=top|<big><b>Saving session...</b></big>"
#saves /mnt/.easy_rw to passed-in destination...
mkdir -p /mnt/${WKG_DEV}/${WKG_DIR}.session-transit
/etc/rc.d/rw-merge '.session-transit' #20220529
killall popup

###end###
